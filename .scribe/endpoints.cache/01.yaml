## Autogenerated by Scribe. DO NOT MODIFY.

name: login
description: |-

  APIs for managing users
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: login
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'Login User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: 1@gmail.com
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '12345'
        type: string
        custom: []
    cleanBodyParameters:
      email: 1@gmail.com
      password: '12345'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "access_token": "xxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            "token_type": "bearer",
            "expires_in": 3600
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: login
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'register User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: 5@gmail.com.
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '12345.'
        type: string
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: duc.
        type: string
        custom: []
    cleanBodyParameters:
      email: 5@gmail.com.
      password: '12345.'
      name: duc.
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "name": "duc",
            "email": "5@gmail.com",
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/info
    metadata:
      groupName: login
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'show info User'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: true
        example: '2'
        type: string
        custom: []
    cleanUrlParameters:
      id: '2'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "name": "duc",
            "email": "5@gmail.com",
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
